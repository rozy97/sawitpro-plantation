# This is the OpenAPI specification for your service. It is used to generate the client code.
# To generate the server code, use the Gradle task `openApiGenerate`. The 
# generated code will be placed in `build/generate-resources/main`.
#
# We will evaluate you based on how well you design your API.
# 1. How well it follows REST principles.
# 2. How easy it is to understand and use.
#
# References
# 1. https://swagger.io/specification/
openapi: "3.0.0"
info:
  version: 1.0.0
  title: Plantation
  license:
    name: MIT
servers:
  - url: http://localhost:8080
paths:
  /estate:
    post:
      summary: Endpoint Create /estate
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateEstateRequest"
      responses:
        "201":
          description: Resource created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse"
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
  /estate/{id}/tree:
    post:
      summary: Create Tree Within Estate
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Estate ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateTreeRequest"
      responses:
        "201":
          description: Resource created successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CreateResponse"
        "400":
          description: Invalid request body
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Estate Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error

  /estate/{id}/stats:
    get:
      summary: Get Estate Stats
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Estate ID
      responses:
        "200":
          description: Success Get Stats
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEstateStatsResponse"
        "404":
          description: Estate Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error
  /estate/{id}/drone-plan:
    get:
      summary: Get Estate Drone Plan
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: Estate ID
        - name: max_distance
          in: query
          required: false
          schema:
            type: integer
          description: Maximum distance of the drone (optional)
      responses:
        "200":
          description: Success Get Estate Drone Plan
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetEstateDronePlanResponse"
        "400":
          description: Invalid Parameters
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "404":
          description: Estate Not Found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Internal Server Error

components:
  schemas:
    CreateEstateRequest:
      type: object
      required:
        - length
        - width
      properties:
        length:
          type: integer
          minimum: 1
          example: 10
        width:
          type: integer
          minimum: 1
          example: 10
    CreateTreeRequest:
      type: object
      required:
        - x
        - y
        - height
      properties:
        x:
          type: integer
          example: 10
        y:
          type: integer
          example: 10
        height:
          type: integer
          example: 30
    CreateResponse:
      type: object
      required:
        - id
      properties:
        id:
          type: string
          example: generatedUUIDv4
    GetEstateStatsResponse:
      type: object
      required:
        - count
        - max
        - min
        - median
      properties:
        count:
          type: integer
          example: 0
        max:
          type: integer
          example: 0
        min:
          type: integer
          example: 0
        median:
          type: integer
          example: 0
    GetEstateDronePlanResponse:
      type: object
      required:
        - distance
      properties:
        distance:
          type: integer
          example: 200
        rest:
          type: object
          properties:
            x:
              type: integer
              example: 10
            y:
              type: integer
              example: 1
    ErrorResponse:
      type: object
      required:
        - message
      properties:
        message:
          type: string
